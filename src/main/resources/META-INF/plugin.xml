<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>org.cirjson.plugin.idea.cirjson-idea-plugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>CirJSON</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="vinccool96@gmail.com" url="https://www.cirjson.org">CirJSON</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description>A plugin to write CirJSON files according to the CirJSON standard.</description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="CirJson"
                implementationClass="org.cirjson.plugin.idea.CirJsonFileType"
                fieldName="INSTANCE" language="CirJson" extensions="cirjson"/>
        <lang.parserDefinition language="CirJson"
                implementationClass="org.cirjson.plugin.idea.CirJsonParserDefinition"/>
        <lang.syntaxHighlighterFactory language="CirJson"
                implementationClass="org.cirjson.plugin.idea.highlighting.CirJsonSyntaxHighlighterFactory"/>
        <fileBasedIndex implementation="org.cirjson.plugin.idea.schema.impl.CirJsonSchemaFileValuesIndex"/>

        <!-- Code style and formatting -->
        <codeStyleSettingsProvider implementation="org.cirjson.plugin.idea.formatter.CirJsonCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="org.cirjson.plugin.idea.formatter.CirJsonLanguageCodeStyleSettingsProvider"/>
        <colorSettingsPage implementation="org.cirjson.plugin.idea.highlighting.CirJsonColorsPage"/>
        <lang.formatter language="CirJson"
                implementationClass="org.cirjson.plugin.idea.formatter.CirJsonFormattingBuilderModel"/>
        <preFormatProcessor implementation="org.cirjson.plugin.idea.formatter.CirJsonTrailingCommaRemover"/>
        <lang.braceMatcher language="CirJson" implementationClass="org.cirjson.plugin.idea.CirJsonBraceMatcher"/>
        <quoteHandler fileType="CirJson" className="org.cirjson.plugin.idea.CirJsonQuoteHandler"/>
        <enterBetweenBracesDelegate language="CirJson"
                implementationClass="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesAndBracketsDelegate"/>
        <enterHandlerDelegate id="CirJsonEnterHandler"
                implementation="org.cirjson.plugin.idea.editor.CirJsonEnterHandler"/>
        <typedHandler id="CirJsonTypedHandler" implementation="org.cirjson.plugin.idea.editor.CirJsonTypedHandler"/>
        <copyPastePreProcessor implementation="org.cirjson.plugin.idea.editor.CirJsonCopyPasteProcessor"/>
        <editorSmartKeysConfigurable id="editor.preferences.cirJsonOptions"
                instance="org.cirjson.plugin.idea.editor.CirJsonSmartKeysConfigurable"/>
        <applicationService serviceImplementation="org.cirjson.plugin.idea.editor.CirJsonEditorOptions"/>

        <!-- Codeinsight -->
        <breadcrumbsInfoProvider implementation="org.cirjson.plugin.idea.breadcrumbs.CirJsonBreadcrumbsProvider"/>
        <focusModeProvider language="CirJson"
                implementationClass="org.cirjson.plugin.idea.editor.CirJsonFocusModeProvider"/>
        <qualifiedNameProvider implementation="org.cirjson.plugin.idea.navigation.CirJsonQualifiedNameProvider"/>
        <completion.contributor language="CirJson" id="CirJsonCompletionContributor" order="last"
                implementationClass="org.cirjson.plugin.idea.codeinsight.CirJsonCompletionContributor"/>
        <!-- <completion.contributor language="CirJson" order="last, before CirJsonCompletionContributor"-->
        <!--         implementationClass="org.cirjson.plugin.idea.schema.impl.CirJsonSchemaCompletionContributor"/>-->
        <lang.psiStructureViewFactory language="CirJson"
                implementationClass="org.cirjson.plugin.idea.structureView.CirJsonStructureViewBuilderFactory"/>
        <lang.foldingBuilder language="CirJson"
                implementationClass="org.cirjson.plugin.idea.editor.folding.CirJsonFoldingBuilder"/>
        <lang.smartEnterProcessor language="CirJson"
                implementationClass="org.cirjson.plugin.idea.editor.smartEnter.CirJsonSmartEnterProcessor"/>
        <lang.namesValidator language="CirJson" implementationClass="org.cirjson.plugin.idea.CirJsonNamesValidator"/>
        <lang.commenter language="CirJson" implementationClass="org.cirjson.plugin.idea.editor.CirJsonCommenter"/>
        <lang.surroundDescriptor language="CirJson"
                implementationClass="org.cirjson.plugin.idea.surroundWith.CirJsonSurroundDescriptor"/>
        <lang.findUsagesProvider language="CirJson"
                implementationClass="org.cirjson.plugin.idea.findUsages.CirJsonFindUsagesProvider"/>
        <statementUpDownMover id="CirJson" order="before line"
                implementation="org.cirjson.plugin.idea.editor.lineMover.CirJsonLineMover"/>

        <!-- Live template context -->
        <liveTemplateContext contextId="CirJson"
                implementation="org.cirjson.plugin.idea.liveTemplates.CirJsonContextType"/>
        <liveTemplateContext contextId="CirJsonStringValues" baseContextId="CirJson"
                implementation="org.cirjson.plugin.idea.liveTemplates.CirJsonInLiteralsContextType"/>
        <liveTemplateContext contextId="CirJsonPropertyKeys" baseContextId="CirJson"
                implementation="org.cirjson.plugin.idea.liveTemplates.CirJsonInPropertyKeysContextType"/>

        <!-- Spellchecking -->
        <spellchecker.support language="CirJson"
                implementationClass="org.cirjson.plugin.idea.CirJsonSpellcheckerStrategy"/>

        <!-- Annotators -->
        <annotator language="CirJson"
                implementationClass="org.cirjson.plugin.idea.codeinsight.CirJsonLiteralAnnotator"/>

        <!-- Inspections -->
        <!--suppress PluginXmlValidity -->
        <inspection.basicVisitor class="org.cirjson.plugin.idea.psi.CirJsonElementVisitor"/>

        <localInspection language="CirJson" shortName="CirJsonStandardCompliance" bundle="messages.CirJsonBundle"
                key="inspection.compliance.name" groupKey="cirJson.inspection.group" enabledByDefault="true"
                level="ERROR"
                implementationClass="org.cirjson.plugin.idea.codeinsight.CirJsonStandardComplianceInspection"/>
        <localInspection language="CirJson" shortName="CirJsonDifferentDataTypesShareID" bundle="messages.CirJsonBundle"
                key="inspection.id.different.type" groupKey="cirJson.inspection.group" enabledByDefault="true"
                level="ERROR"
                implementationClass="org.cirjson.plugin.idea.codeinsight.CirJsonDifferentDataTypesShareIDInspection"/>
        <localInspection language="CirJson" shortName="CirJsonDuplicatePropertyKeys" bundle="messages.CirJsonBundle"
                key="inspection.duplicate.keys.name" groupKey="cirJson.inspection.group" enabledByDefault="true"
                level="WARNING"
                implementationClass="org.cirjson.plugin.idea.codeinsight.CirJsonDuplicatePropertyKeysInspection"/>

        <!-- Selection handling -->
        <extendWordSelectionHandler
                implementation="org.cirjson.plugin.idea.editor.selection.CirJsonStringLiteralSelectionHandler"/>

        <!-- Element manipulators -->
        <lang.elementManipulator forClass="org.cirjson.plugin.idea.psi.CirJsonStringLiteral"
                implementationClass="org.cirjson.plugin.idea.psi.CirJsonStringLiteralManipulator"/>

        <!-- Services -->
        <projectService
                serviceImplementation="org.cirjson.plugin.idea.schema.CirJsonSchemaMappingsProjectConfiguration"/>
        <projectService
                serviceImplementation="org.cirjson.plugin.idea.schema.CirJsonSchemaCatalogProjectConfiguration"/>
        <projectService serviceInterface="org.cirjson.plugin.idea.schema.CirJsonSchemaService"
                serviceImplementation="org.cirjson.plugin.idea.schema.impl.CirJsonSchemaServiceImpl"/>

        <!-- IDE utils -->
        <lang.lineWrapStrategy language="CirJson"
                implementationClass="org.cirjson.plugin.idea.formatter.CirJsonLineWrapPositionStrategy"/>
        <highlightVisitor implementation="org.cirjson.plugin.idea.highlighting.CirJsonRainbowVisitor"/>

        <!-- Intentions -->
        <intentionAction>
            <language>CirJson</language>
            <className>org.cirjson.plugin.idea.intentions.CirJsonSortPropertiesIntention</className>
            <bundleName>messages.CirJsonBundle</bundleName>
            <categoryKey>cirjson.intention.category.name</categoryKey>
        </intentionAction>
    </extensions>

    <extensions defaultExtensionNs="org.cirjson.plugin.idea">
        <cirJsonLiteralChecker implementation="org.cirjson.plugin.idea.codeinsight.StandardCirJsonLiteralChecker"/>
    </extensions>

    <extensionPoints>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.cirJsonStandardComplianceProvider"
                interface="org.cirjson.plugin.idea.codeinsight.CirJsonStandardComplianceProvider" dynamic="true"/>
        <extensionPoint qualifiedName="javaScript.cirJsonSchema.providerFactory"
                interface="org.cirjson.plugin.idea.schema.extension.CirJsonSchemaProviderFactory" dynamic="true"/>
        <extensionPoint qualifiedName="javaScript.cirJsonSchema.contentAwareSchemaFileProvider"
                interface="org.cirjson.plugin.idea.schema.extension.ContentAwareCirJsonSchemaFileProvider"
                dynamic="true"/>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.cirJsonLikePsiWalkerFactory"
                interface="org.cirjson.plugin.idea.schema.extension.CirJsonLikePsiWalkerFactory" dynamic="true"/>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.cirJsonSchemaNestedCompletionsTreeProvider"
                interface="org.cirjson.plugin.idea.schema.extension.CirJsonSchemaNestedCompletionsTreeProvider"
                dynamic="true"/>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.cirJsonSchemaEnabler"
                interface="org.cirjson.plugin.idea.schema.extension.CirJsonSchemaEnabler" dynamic="true"/>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.cirJsonLiteralChecker"
                interface="org.cirjson.plugin.idea.codeinsight.CirJsonLiteralChecker" dynamic="true"/>
        <extensionPoint qualifiedName="org.cirjson.plugin.idea.catalog.exclusion"
                interface="org.cirjson.plugin.idea.schema.remote.CirJsonSchemaCatalogExclusion" dynamic="true"/>
    </extensionPoints>
</idea-plugin>